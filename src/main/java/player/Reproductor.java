/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package player;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javazoom.jlgui.basicplayer.BasicPlayerException;

/**
 *
 * @author Usuario
 */
public class Reproductor extends javax.swing.JFrame {
    
    private ListaEnlazada nodoCancion = null;
    private ColaPlaylist playlistQueue = new ColaPlaylist();
    private short x = 0;
    private Zplayer player;
    private DefaultListModel lista_modelo = new DefaultListModel();
    protected boolean detenido = false;

    /**
     * Creates new form Reproductor
     */
    public Reproductor() {
        setTitle("Quetzalitomp3");
        setResizable(false);
        initComponents();
        player = new Zplayer(this);
        
        tfReproduciendo.setEditable(false);
        Volumen.setEnabled(false);
        detectarColaVacia.setText("SI está vacía");
    }
    
    public void detectarColaVacia(){
        if(playlistQueue.isEmpty()){
            detectarColaVacia.setText("SI está vacía");
            System.out.println("La Cola SI está vacía");
        }else{
            detectarColaVacia.setText("NO está vacía");
            System.out.println("La Cola NO está vacía");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgregaCancion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_listaReproduccion = new javax.swing.JList<>();
        btnplay = new javax.swing.JButton();
        btnsiguiente = new javax.swing.JButton();
        tfReproduciendo = new javax.swing.JTextField();
        Volumen = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        detectarColaVacia = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));

        btnAgregaCancion.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Documents\\NetBeansProjects\\ProyectoReproductorM\\src\\main\\java\\icons\\iconfinder_add_126583.png")); // NOI18N
        btnAgregaCancion.setText("agregar");
        btnAgregaCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregaCancionActionPerformed(evt);
            }
        });

        jList_listaReproduccion.setBackground(new java.awt.Color(0, 0, 51));
        jList_listaReproduccion.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jList_listaReproduccion);

        btnplay.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Documents\\NetBeansProjects\\ProyectoReproductorM\\src\\main\\java\\icons\\iconfinder_play-arrow_326577.png")); // NOI18N
        btnplay.setText("play");
        btnplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnplayActionPerformed(evt);
            }
        });

        btnsiguiente.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Documents\\NetBeansProjects\\ProyectoReproductorM\\src\\main\\java\\icons\\siguiente.png")); // NOI18N
        btnsiguiente.setText("siguiente");
        btnsiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsiguienteActionPerformed(evt);
            }
        });

        tfReproduciendo.setText("...");

        Volumen.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                VolumenStateChanged(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Documents\\NetBeansProjects\\ProyectoReproductorM\\src\\main\\java\\icons\\sonido.png")); // NOI18N

        jLabel2.setText("Reproduciendo ahora:");

        jLabel3.setText("La cola está Vacía?");

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Documents\\NetBeansProjects\\ProyectoReproductorM\\src\\main\\java\\icons\\musica2.gif")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregaCancion)
                        .addGap(34, 34, 34)
                        .addComponent(btnplay)
                        .addGap(33, 33, 33)
                        .addComponent(btnsiguiente))
                    .addComponent(jScrollPane1))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfReproduciendo)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 78, Short.MAX_VALUE)))
                        .addGap(77, 77, 77))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(detectarColaVacia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Volumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfReproduciendo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(detectarColaVacia, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Volumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 26, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnsiguiente)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAgregaCancion)
                        .addComponent(btnplay))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregaCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregaCancionActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Archivo MP3", "mp3", "mp3"));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setMultiSelectionEnabled(true);
        int seleccion = fileChooser.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File files[] = fileChooser.getSelectedFiles();

            for (File file : files) {
                
                playlistQueue.Insertar(file.getName(), file.getPath());
                
                System.out.println(file.getName());
                System.out.println(file.getPath());
                lista_modelo.addElement(file.getName());
                jList_listaReproduccion.setModel(lista_modelo);
                detectarColaVacia();
            }
            try {
                //System.out.println(playlistQueue.toString());
            } catch (Exception ex) {
                Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAgregaCancionActionPerformed

    private void btnplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnplayActionPerformed
        if (playlistQueue.isEmpty()) {
            JOptionPane.showMessageDialog(null, "no hay canciones", "alerta", 1);
        } else {
                if (nodoCancion == null) {
                    nodoCancion = playlistQueue.frente;
                    detectarColaVacia();
                }else{
                    try {
                    if (x == 0) {
                        player.control.open(new URL("file:///" + nodoCancion.cancion.getUbicacion()));
                        player.control.play();
                        System.out.println("se inicia");
                        tfReproduciendo.setText(nodoCancion.cancion.getNombreCancion());
                        Volumen.setEnabled(true);
                        x = 1;
                        //play.setIcon(new ImageIcon(getClass().getResource("/iconos/pausa.png")));
                    } else {
                        if (x == 1) {
                            player.control.pause();
                            System.out.println("se pausa!!!");
                            x = 2;
                            //play.setIcon(new ImageIcon(getClass().getResource("/iconos/play.png")));
                    } else {
                            player.control.resume();
                            System.out.println("se continua!!!");
                            x = 1;
                            //play.setIcon(new ImageIcon(getClass().getResource("/iconos/pausa.png")));
                        }
                    }detectarColaVacia();
                    } catch (BasicPlayerException ex) {
                        JOptionPane.showMessageDialog(null, "error al abrir\nla cancion!!!", "alerta", 1);
                        x = 0;
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(null, "error al abrir la direccion\nde la cancion!!!", "alerta", 1);
                        x = 0;
                    }
                }
                detenido = false;
            }
                

    }//GEN-LAST:event_btnplayActionPerformed

    private void btnsiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsiguienteActionPerformed
        if (playlistQueue.isEmpty()) {
            JOptionPane.showMessageDialog(null, "no hay canciones", "alerta", 1);
            nodoCancion = playlistQueue.quitar();
            lista_modelo.removeElement(nodoCancion.cancion.getNombreCancion());
            jList_listaReproduccion.setModel(lista_modelo);
            detectarColaVacia();
        }else{
            try {
                lista_modelo.removeElement(nodoCancion.cancion.getNombreCancion());
                jList_listaReproduccion.setModel(lista_modelo);
                nodoCancion = playlistQueue.quitar();
                detectarColaVacia();
                
            } catch (Exception ex) {
                Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
            }
            x = 0;
            btnplayActionPerformed(evt); 
        }

    }//GEN-LAST:event_btnsiguienteActionPerformed

    private void VolumenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_VolumenStateChanged
        try {
            player.control.setGain((double) Volumen.getValue() / 100);
        } catch (BasicPlayerException ex) {
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_VolumenStateChanged

        protected void eventoSiguiente(){
        btnsiguienteActionPerformed(null);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reproductor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider Volumen;
    private javax.swing.JButton btnAgregaCancion;
    private javax.swing.JButton btnplay;
    private javax.swing.JButton btnsiguiente;
    private javax.swing.JLabel detectarColaVacia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList_listaReproduccion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tfReproduciendo;
    // End of variables declaration//GEN-END:variables
}
